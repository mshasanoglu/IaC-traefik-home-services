version: "3.7"

##############################
########## services ##########
##############################
services:
###########################
######### traefik #########
###########################
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.6
    container_name: traefik--2-6
    restart: unless-stopped
    networks:
      - nw-traefik
    extra_hosts:
      - host.docker.internal:${HOST_IP}
    ports:
      # The HTTP port
      - "80:80/tcp"
      # The HTTPS port
      - "443:443/tcp"
      # The WWeb UI (enabled by --api.insecure=true)
      - "8008:8008/tcp"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Traefik static configuration 
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml
      # Traefik dynamic configuration
      - ./config/traefik/dynamic-conf:/etc/traefik/dynamic-conf
      # Traefik ssl certs 
      - ./config/traefik/acme.json:/ssl-certs/acme.json

############################
########## whoami ##########
############################
  whoami-app:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    depends_on:
      - traefik
    networks:
      - nw-traefik
    labels:
      traefik.enable: true
#      traefik.http.routers.whoami-app.tls: true
#      traefik.http.routers.whoami-app.tls.certresolver: "prod"
      traefik.http.routers.whoami-app.rule: "Host(`whoami.${DOMAIN}`)"
      


############################
############ db ############
############################
  db:
    image: mariadb
    container_name: mariadb
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    depends_on:
      - traefik
    networks:
      - nw-traefik
    volumes:
      - ./config/mariadb:/docker-entrypoint-initdb.d
      - ./data/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

############################
####### in-memory-db #######
############################
  in-memory-db:
    image: redis
    container_name: redis
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    depends_on:
      - db
    networks:
      - nw-traefik
    volumes:
      - ./data/in-memory-db:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf

############################
######### homepage #########
############################
  homepage:
    image: wordpress
    container_name: wordpress
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - nw-traefik
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
    volumes:
      - ./data/homepage:/var/www/html
    labels:
      traefik.enable: true
#      traefik.http.routers.homepage.tls: true
#      traefik.http.routers.homepage.tls.certresolver: "prod"
      traefik.http.routers.homepage.rule: "Host(`${WORDPRESS_ALIAS}.${DOMAIN}`)"

###########################
######## cloud-app ########
###########################
  cloud-app:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      - in-memory-db
    networks:
      - nw-traefik
    links:
      - db
    volumes:
      - ./data/cloud-app/html:/var/www/html
      - ./data/cloud-app/custom_apps:/var/www/html/custom_apps
      - ./data/cloud-app/config:/var/www/html/config
      - ./data/cloud-app/data:/var/www/html/data
    environment:
      # static
      MYSQL_HOST: db
      REDIS_HOST: in-memory-db
      REDIS_HOST_PORT: 6380
      APACHE_DISABLE_REWRITE_IP: 1
      TRUSTED_PROXIES: 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
      # dynamic
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_ALIAS}.${DOMAIN}
      OVERWRITEHOST: ${NEXTCLOUD_ALIAS}.${DOMAIN}
      OVERWRITEPROTOCOL: ${NEXTCLOUD_PROTOCOL}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_AUTHTYPE: ${SMTP_AUTHTYPE}
      SMTP_NAME: ${SMTP_NAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_DOMAIN: ${MAIL_DOMAIN}
    labels:
      traefik.enable: true
      # routers
      traefik.http.routers.cloud-app.tls: true
#      traefik.http.routers.cloud-app.tls.certresolver: "prod"
      traefik.http.routers.cloud-app.rule: "Host(`${NEXTCLOUD_ALIAS}.${DOMAIN}`)"
      traefik.http.routers.cloud-app.middlewares: "cloud-app-headers,cloud-app-redirectregex"
      # middleware headers
      traefik.http.middlewares.cloud-app-headers.headers.customFrameOptionsValue: "ALLOW-FROM https://${NEXTCLOUD_ALIAS}.${DOMAIN}"
      traefik.http.middlewares.cloud-app-headers.headers.contentSecurityPolicy: "frame-ancestors 'self' ${NEXTCLOUD_ALIAS}.${DOMAIN}"
      traefik.http.middlewares.cloud-app-headers.headers.stsSeconds: "155520011"
      traefik.http.middlewares.cloud-app-headers.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.cloud-app-headers.headers.stsPreload: true
      traefik.http.middlewares.cloud-app-headers.headers.customresponseheaders.X-Frame-Options: "SAMEORIGIN"
      # middleware redirectregex
      traefik.http.middlewares.cloud-app-redirectregex.redirectregex.permanent: true
      traefik.http.middlewares.cloud-app-redirectregex.redirectregex.regex: "https://(.*)/.well-known/(card|cal)dav"
      traefik.http.middlewares.cloud-app-redirectregex.redirectregex.replacement: "https://$${1}/remote.php/dav/"


############################
########## pihole ##########
############################
  pihole-app:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    depends_on:
      - traefik
    network_mode: host
    volumes:
      - ./data/pihole-app/etc-pihole:/etc/pihole
      - ./data/pihole-app/etc-dnsmasq.d:/etc/dnsmasq.d

    environment:
      TZ: ${TZ}
      WEBPASSWORD: ${PIHOLE_PASSWORD}
      PIHOLE_DNS_: ${PIHOLE_DNS}
      DHCP_ACTIVE: ${DHCP_ACTIVE}
      DHCP_START: ${DHCP_START}
      DHCP_END: ${DHCP_END}
      DHCP_ROUTER: ${DHCP_ROUTER}
      DHCP_LEASETIME: ${DHCP_LEASETIME}
      PIHOLE_DOMAIN: ${PIHOLE_DOMAIN}
      DHCP_rapid_commit: ${DHCP_RAPID_COMMIT}
      DHCP_IPv6: ${DHCP_IPV6}
      VIRTUAL_HOST: ${PIHOLE_ALIAS}.${DOMAIN}
      WEBTHEME: ${WEBTHEME}
      INTERFACE: ${INTERFACE}
      WEB_PORT: ${PIHOLE_WEB_PORT}
      DNSMASQ_LISTENING: ${DNSMASQ_LISTENING}
    cap_add:
      - NET_ADMIN
    labels:
      traefik.enable: true
#      traefik.http.routers.pihole-app.tls: true
#      traefik.http.routers.pihole-app.tls.certresolver: "prod"
      traefik.http.routers.pihole-app.rule: "Host(`${PIHOLE_ALIAS}.${DOMAIN}`)"
      traefik.http.services.pihole-app.loadbalancer.server.port: ${PIHOLE_WEB_PORT}

#############################
####### smarthome-app #######
#############################
  smarthome-app:
    image: iobroker/iobroker
    container_name: iobroker
    hostname: smarthome-app
    restart: unless-stopped
    depends_on:
      - traefik
    network_mode: host
    volumes:
      - ./data/smarthome-app:/opt/iobroker
    environment:
      TZ: ${TZ}
    labels:
      traefik.enable: true
#      traefik.http.routers.smarthome-app.tls: true
#      traefik.http.routers.smarthome-app.tls.certresolver: "prod"
      traefik.http.routers.smarthome-app.rule: "Host(`${IOBROKER_ALIAS}.${DOMAIN}`)"
      traefik.http.services.smarthome-app.loadbalancer.server.port: 8081

##############################
########## networks ##########
##############################
networks:
  nw-traefik:
