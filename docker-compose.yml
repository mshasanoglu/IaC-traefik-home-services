version: "3.7"

##############################
########## services ##########
##############################
services:
#############################
############ vpn ############
#############################
  vpn:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    restart: always
    networks:
      - nw-traefik
    ports:
      - ${WIREGUARD_SERVERPORT}:${WIREGUARD_SERVERPORT}/udp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
    volumes:
      - /lib/modules:/lib/modules
      - $DATA_PATH/vpn:/config
    environment:
      # DYNAMIC
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      SERVERURL: ${DOMAIN}
      SERVERPORT: ${WIREGUARD_SERVERPORT}
      PEERS: ${WIREGUARD_PEERS}
      PEERDNS: ${WIREGUARD_PEERDNS}
      INTERNAL_SUBNET: ${WIREGUARD_INTERNAL_SUBNET}


###########################
######### traefik #########
###########################
  traefik:
    image: traefik:v3.0
    container_name: traefik--3-0
    restart: always
    command:
      --global.checknewversion=true
      --global.sendanonymoususage=false
      --entrypoints.web.address=:80
      --entrypoints.web.http.redirections.entrypoint.to=websecure
      --entrypoints.web.http.redirections.entrypoint.scheme=https
      --entrypoints.websecure.address=:443
      --entrypoints.traefik.address=:${TRAEFIK_WEB_PORT}
      --certificatesresolvers.prod.acme.email=${SMTP_NAME}
      --certificatesresolvers.prod.acme.storage=/ssl-certs/acme.json
      --certificatesresolvers.prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      --certificatesresolvers.prod.acme.httpchallenge.entrypoint=web
      --api.insecure=true
      --providers.docker.exposedbydefault=false
      --providers.file.directory=/etc/traefik/dynamic-conf
    networks:
      - nw-traefik
    extra_hosts:
      - host.docker.internal:${HOST_IP}
    ports:
      # The HTTP port
      - 80:80/tcp
      # The HTTPS port
      - 443:443/tcp
      # The Web UI (enabled by --api.insecure=true)
      - ${TRAEFIK_WEB_PORT}:${TRAEFIK_WEB_PORT}/tcp
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Traefik dynamic configuration
      - ./config/traefik/dynamic-conf:/etc/traefik/dynamic-conf
      # Traefik ssl certs 
      - $DATA_PATH/ssl-certs:/ssl-certs
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: "prod"
      traefik.http.routers.traefik.rule: "Host(`${TRAEFIK_ALIAS}.${DOMAIN}`)"
      traefik.http.routers.traefik.middlewares: traefik-auth
      # SERVICES
      traefik.http.services.traefik.loadbalancer.server.port: ${TRAEFIK_WEB_PORT}
      # MIDDLEWARES
      traefik.http.middlewares.traefik-auth.basicauth.users: ${BASIC_AUTH_CREDS}


############################
######## whoami-app ########
############################
  whoami-app:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    container_name: whoami
    restart: always
    networks:
      - nw-traefik
    depends_on:
      - traefik
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.whoami-app.tls: true
      traefik.http.routers.whoami-app.tls.certresolver: "prod"
      traefik.http.routers.whoami-app.rule: "Host(`whoami.${DOMAIN}`)"


#############################
######## vs-code-app ########
#############################
  vs-code-app:
    # A container that exposes an API to show its IP address
    image: lscr.io/linuxserver/code-server
    container_name: code-server
    restart: always
    networks:
      - nw-traefik
    depends_on:
      - traefik
    volumes:
      - $DATA_PATH/vs-code-app:/config
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      PASSWORD: ${VS_CODE_PASSWORD}
      SUDO_PASSWORD: ${VS_CODE_SUDO_PASSWORD}
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.vs-code-app.tls: true
      traefik.http.routers.vs-code-app.tls.certresolver: "prod"
      traefik.http.routers.vs-code-app.rule: "Host(`${VS_CODE_ALIAS}.${DOMAIN}`)"


############################
######## pihole-app ########
############################
  pihole-app:
    image: pihole/pihole:2023.03.1
    container_name: pihole--2023-03-1
    restart: always
    network_mode: host
    depends_on:
      - traefik
    cap_add:
      - NET_ADMIN
    volumes:
      - $DATA_PATH/pihole-app/etc-pihole:/etc/pihole
      - $DATA_PATH/pihole-app/etc-dnsmasq.d:/etc/dnsmasq.d
    environment:
      # DYNAMIC
      TZ: ${TZ}
      WEBPASSWORD: ${PIHOLE_PASSWORD}
      PIHOLE_DNS_: ${PIHOLE_DNS}
      DHCP_ACTIVE: ${PIHOLE_DHCP_ACTIVE}
      DHCP_START: ${PIHOLE_DHCP_START}
      DHCP_END: ${PIHOLE_DHCP_END}
      DHCP_ROUTER: ${PIHOLE_DHCP_ROUTER}
      DHCP_LEASETIME: ${PIHOLE_DHCP_LEASETIME}
      PIHOLE_DOMAIN: ${PIHOLE_DOMAIN}
      DHCP_rapid_commit: ${PIHOLE_DHCP_RAPID_COMMIT}
      DHCP_IPv6: ${PIHOLE_DHCP_IPV6}
      VIRTUAL_HOST: ${PIHOLE_ALIAS}.${DOMAIN}
      WEBTHEME: ${PIHOLE_WEBTHEME}
      INTERFACE: ${PIHOLE_INTERFACE}
      WEB_PORT: ${PIHOLE_WEB_PORT}
      DNSMASQ_LISTENING: ${PIHOLE_DNSMASQ_LISTENING}
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.pihole-app.tls: true
      traefik.http.routers.pihole-app.tls.certresolver: "prod"
      traefik.http.routers.pihole-app.rule: "Host(`${PIHOLE_ALIAS}.${DOMAIN}`)"
      # SERVICES
      traefik.http.services.pihole-app.loadbalancer.server.port: ${PIHOLE_WEB_PORT}


#############################
####### smarthome-app #######
#############################
  smarthome-app:
    image: iobroker/iobroker:v7.2.0
    container_name: iobroker--7-2-0
    hostname: $HOSTNAME
    restart: always
    network_mode: host
    depends_on:
      - traefik
    volumes:
      - $DATA_PATH/smarthome-app:/opt/iobroker
    environment:
      # DYNAMIC
      TZ: ${TZ}
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.smarthome-app.tls: true
      traefik.http.routers.smarthome-app.tls.certresolver: "prod"
      traefik.http.routers.smarthome-app.rule: "Host(`${IOBROKER_ALIAS}.${DOMAIN}`)"
      # SERVICES
      traefik.http.services.smarthome-app.loadbalancer.server.port: 8081
      

############################
############ db ############
############################
  db:
    image: mariadb:10.7.8
    container_name: mariadb--10-7.8
    restart: always
    command: 
      --transaction-isolation=READ-COMMITTED
      --binlog-format=ROW
    networks:
      - nw-traefik
    depends_on:
      - traefik
    volumes:
      - $DATA_PATH/db/init:/docker-entrypoint-initdb.d
      - $DATA_PATH/db/mysql:/var/lib/mysql
    environment:
      # DYNAMIC
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}


############################
########## db-app ##########
############################
  db-app:
    image: adminer
    container_name: adminer
    restart: always
    networks:
      - nw-traefik
    ports:
      - 8080:8080/tcp
    depends_on:
      - db


############################
####### in-memory-db #######
############################
  in-memory-db:
    image: redis:7.0.8
    container_name: redis--7-0-8
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - nw-traefik
    depends_on:
      - db-app
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - $DATA_PATH/in-memory-db:/data


############################
######### homepage #########
############################
  homepage:
    image: wordpress:6.1.1
    container_name: wordpress--6-1-1
    restart: always
    networks:
      - nw-traefik
    depends_on:
      - db-app
    environment:
      # STATIC
      WORDPRESS_DB_HOST: db
      # DYNAMIC
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB}
    volumes:
      - $DATA_PATH/homepage:/var/www/html
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.homepage.tls: true
      traefik.http.routers.homepage.tls.certresolver: "prod"
      traefik.http.routers.homepage.rule: "Host(`${DOMAIN}`) || Host(`${WORDPRESS_ALIAS}.${DOMAIN}`)"


###########################
######## cloud-app ########
###########################
  cloud-app:
    image: nextcloud:26.0.0
    container_name: nextcloud--26-0-0
    restart: always
    networks:
      - nw-traefik
    depends_on:
      - in-memory-db
    volumes:
      - $DATA_PATH/cloud-app/html:/var/www/html
      - $DATA_PATH/cloud-app/custom_apps:/var/www/html/custom_apps
      - $DATA_PATH/cloud-app/config:/var/www/html/config
      - $DATA_PATH/cloud-app/data:/var/www/html/data
    environment:
      # STATIC
      MYSQL_HOST: db
      REDIS_HOST: in-memory-db
      REDIS_HOST_PORT: 6380
      APACHE_DISABLE_REWRITE_IP: 1
      TRUSTED_PROXIES: 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
      # DYNAMIC
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${NEXTCLOUD_DB}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_ALIAS}.${DOMAIN}
      OVERWRITEHOST: ${NEXTCLOUD_ALIAS}.${DOMAIN}
      OVERWRITEPROTOCOL: ${NEXTCLOUD_PROTOCOL}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      MAIL_FROM_ADDRESS: ${NEXTCLOUD_MAIL_FROM_ADDRESS}
      MAIL_DOMAIN: ${NEXTCLOUD_MAIL_DOMAIN}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_AUTHTYPE: ${SMTP_AUTHTYPE}
      SMTP_NAME: ${SMTP_NAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.cloud-app.tls: true
      traefik.http.routers.cloud-app.tls.certresolver: "prod"
      traefik.http.routers.cloud-app.rule: "Host(`${NEXTCLOUD_ALIAS}.${DOMAIN}`)"
      traefik.http.routers.cloud-app.middlewares: "cloud-app-headers,cloud-app-redirectregex"
      # MIDDLEWARES headers
      traefik.http.middlewares.cloud-app-headers.headers.customFrameOptionsValue: "ALLOW-FROM ${NEXTCLOUD_PROTOCOL}://${NEXTCLOUD_ALIAS}.${DOMAIN}"
      traefik.http.middlewares.cloud-app-headers.headers.contentSecurityPolicy: "frame-ancestors 'self' ${NEXTCLOUD_ALIAS}.${DOMAIN}"
      traefik.http.middlewares.cloud-app-headers.headers.stsSeconds: "155520011"
      traefik.http.middlewares.cloud-app-headers.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.cloud-app-headers.headers.stsPreload: true
      traefik.http.middlewares.cloud-app-headers.headers.customresponseheaders.X-Frame-Options: "SAMEORIGIN"
      # MIDDLEWARES redirectregex
      traefik.http.middlewares.cloud-app-redirectregex.redirectregex.permanent: true
      traefik.http.middlewares.cloud-app-redirectregex.redirectregex.regex: "${NEXTCLOUD_PROTOCOL}://(.*)/.well-known/(card|cal)dav"
      traefik.http.middlewares.cloud-app-redirectregex.redirectregex.replacement: "${NEXTCLOUD_PROTOCOL}://$${1}/remote.php/dav/"


##########################
######## plex-app ########
##########################
  plex-app:
    image: lscr.io/linuxserver/plex:1.30.2
    container_name: plex--1-30-2
    hostname: ${HOSTNAME}
    restart: always
    networks:
      - nw-traefik
    ports:
      - 32400:32400/tcp
    depends_on:
      - cloud-app
    volumes:
      - $DATA_PATH/plex-app/config:/config
      - $DATA_PATH/plex-app/transcode-temp:/transcode
      - $DATA_PATH/$PLEX_DATA:/data
    environment:
      # STATIC
      VERSION: docker
      # DYNAMIC
      TZ: ${TZ}
      PLEX_CLAIM: ${PLEX_CLAIM}
      ADVERTISE_IP: http://${HOST_IP}:32400/
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.plex-app.tls: true
      traefik.http.routers.plex-app.tls.certresolver: "prod"
      traefik.http.routers.plex-app.rule: "Host(`${PLEX_ALIAS}.${DOMAIN}`)"
      # SERVICES
      traefik.http.services.plex-app.loadbalancer.server.port: 32400


###########################
######## api-app ##########
###########################
  api-app:
    build: ./config/fastapi/
    image: api-app:latest
    container_name: fastapi
    restart: always
    networks:
      - nw-traefik
    depends_on:
      - cloud-app
    volumes:
      - $DATA_PATH/$API_DATA:/code/app
    environment:
      # DYNAMIC
      TZ: ${TZ}
      API_KEY: ${API_KEY}
      API_KEY_NAME: ${API_KEY_NAME}
      COOKIE_DOMAIN: ${API_ALIAS}.${DOMAIN}
    labels:
      traefik.enable: true
      # ROUTERS
      traefik.http.routers.api-app.tls: true
      traefik.http.routers.api-app.tls.certresolver: "prod"
      traefik.http.routers.api-app.rule: "Host(`${API_ALIAS}.${DOMAIN}`)"


##############################
########## networks ##########
##############################
networks:
  nw-traefik:
